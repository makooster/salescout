import express, { Request, Response } from 'express';
import { WebSocket } from 'ws'; 
import { connectDB } from './config/db';
import whatsappRoutes from './routes/whatsapp';
import WhatsAppService from './services/whatsapp';
import http from 'http';
import dotenv from 'dotenv';
import path from 'path';

dotenv.config();

const app = express();

const PORT = 3000;

const ip = '192.168.1.51';

const server = http.createServer(app);

const wss = new WebSocket.Server({ server });


app.use(express.static(path.join(__dirname, 'src', 'public')));

// This keeps track of user sessions with their corresponding WebSocket connections
const userSessions: { [key: string]: WebSocket } = {};

wss.on('connection', (ws: WebSocket) => {  // Specify WebSocket type from the 'ws' library
    console.log('New client connected');
    
    ws.on('message', (message: string) => {  // Cast message as a string
        const data = JSON.parse(message);

        // Authenticate user with phone number
        if (data.action === 'authenticate') {
            const phoneNumber = data.phoneNumber;
            WhatsAppService.initializeWhatsAppSession(ws, phoneNumber);
        }
    });

    ws.on('close', () => {
        console.log('Client disconnected');
    });
});


connectDB();
app.use(express.json());
app.use('/api/whatsapp', whatsappRoutes);

app.get('/', (req: Request, res: Response) => {
    res.send('WhatsApp Bot is running! ðŸš€');
});

server.listen(PORT, ip, () => {
    console.log(`Server running on http://${ip}:${PORT}`);
});
